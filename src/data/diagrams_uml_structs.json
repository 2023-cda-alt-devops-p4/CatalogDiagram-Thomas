[
    {
        "uuid": "cd9c41c6-4146-4545-87f3-6aa262d271e5",
        "title": "Classes",
        "subTitle": "Diagramme UML",
        "description": [
            "Il s'agit de la structure de l'application.",
            "On y trouve toutes les classes, leurs caractéristiques (comme les attributs) et comment elles sont connectées."
        ],
        "benefits": [
            "Il offre une base solide pour le code",
            "Facilite la communication sur la structure du système",
            "Permet de définir des concepts clés de modélisation"
        ],
        "goodPratices": [
            "Utiliser une notation cohérente pour les cardinalités.",
            "Utiliser une notation cohérente pour la visibilité des attributs."
        ],
        "example": {
            "description": [
                "Pense à une application de gestion d'un zoo.",
                "Tu as des classes, comme par exemple une classe de base pour les animaux et tu as les canards, les poissons et les zèbres.",
                "Les attributs décrivent ce que chaque objet contient, comme par exemple âge qui est commun à tous les animaux."
            ],
            "image": "https://miro.medium.com/v2/resize:fit:1400/1*szU8ngrWSXmBNPYReMyK5w.png"
        }
    },
    {
        "uuid": "0e5b45e4-bb11-44a5-998a-195b5d4ede0c",
        "title": "Composants",
        "subTitle": "Diagramme UML",
        "description": [
            "Imagine que tu es un chef d'orchestre qui guide différents musiciens pour jouer ensemble une mélodie harmonieuse.",
            "Le diagramme de composant, c'est un peu comme ta partition musicale, où chaque instrument représente un composant logiciel.",
            "Il te montre comment ces composants interagissent pour créer une belle symphonie, c'est-à-dire ton logiciel."
        ],
        "benefits": [
            "Facilite la compréhension de la structure.",
            "Permet d'identifier les dépendances clés entre les composants.",
            "Aide à coordonner et à planifier le développement."
        ],
        "goodPratices": [
            "Utilise des flèches pour montrer les interactions entre composants.",
            "Assure-toi que les interfaces sont bien définies."
        ],
        "example": {
            "description": [

            ],
            "image": "https://www.ionos.fr/digitalguide/fileadmin/DigitalGuide/Screenshots_2020/FR-uml-component-diagram-2.png"
        }
    },
    {
        "uuid": "32bdb5d9-9b28-4e30-ab44-23ca93ca73c3",
        "title": "Déploiement",
        "subTitle": "Diagramme UML",
        "description": [
            "C'est comme une carte de jeu où tu places tes cartes et tes jetons pour voir comment tout fonctionne ensemble.",
            "Il montre où ton application s'exécute, que ce soit sur des serveurs, des ordinateurs ou même des appareils mobiles."
        ],
        "benefits": [
            "Il te permet de visualiser comment ton application s'étend sur le matériel.",
            "Il te permet de planifier les ressources nécessaires.",
            "Il te permet d'anticiper les problèmes de performance."
        ],
        "goodPratices": [
            "Utilise des flèches et des annotations pour expliquer les connexions.",
            "Assure-toi que chaque élément est bien étiqueté."
        ],
        "example": {
            "description": [
                "Image que tu vas sur ton application web, la première chose c'est toi qui vas sur le navigateur.",
                "Le navigateur appelle ensuite le serveur ou est déployé ton application web, il te renverra ensuite l'interface utilisateur",
                "et déclenchera plein de processus comme par exemple ajouter des logs, ou encore contactait la base de données."
            ],
            "image": "https://upload.wikimedia.org/wikipedia/commons/thumb/9/97/UML_Diagram_Deployment.svg/1920px-UML_Diagram_Deployment.svg.png"
        }
    },
    {
        "uuid": "e6a95e7f-ac07-4e11-b2ee-8ff7710e9055",
        "title": "Structure composite",
        "subTitle": "Diagramme UML",
        "description": [
            "Le diagramme composite, c'est un peu comme une mosaïque de petits morceaux de ton application.",
            "C'est une façon de montrer comment des éléments plus petits s'assemblent pour former quelque chose de plus grand.",
            "\n",
            "Imagine-le comme un puzzle qui te montre comment les parties de ton application s'emboîtent pour créer une vue globale.",
            "Ça t'aide à visualiser la structure et la composition."
        ],
        "benefits": [
            "Clarifie la structure interne de ton application.",
            "Aide à gérer la complexité en divisant l'application en parties plus petites.",
            "Facilite la communication entre les membres de l'équipe."
        ],
        "goodPratices": [
            "Utilise des compositions pour montrer comment les parties se combinent pour créer un tout.",
            "Assure-toi que la composition a du sens en termes de structure.",
            "Indique les relations et les interactions clés entre les éléments."
        ],
        "example": {
            "description": [],
            "image": "https://www.codingame.com/servlet/fileservlet?id=15644456870972"
        }
    },
    {
        "uuid": "3e83a516-eec3-4119-a97a-ccf69bc294b4",
        "title": "Objets",
        "subTitle": "Diagramme UML",
        "description": [
            "Le diagramme d'objets, c'est comme une photo instantanée de ton application à un moment précis.",
            "Ça te montre les objets qui font le boulot et comment ils sont connectés les uns aux autres.",
            "\n",
            "Imagine-le comme un plan pour comprendre qui parle à qui dans ton application.",
            "Ça t'aide à voir quels objets discutent et échangent des infos."
        ],
        "benefits": [
            "Tu peux mieux comprendre comment les morceaux de ton application interagissent.",
            "Ça te montre les données que les objets manipulent.",
            "C'est super pour repérer les problèmes dans ton code."
        ],
        "goodPratices": [
            "Utilisez une notation claire pour nommer les objets, leurs attributs et les relations entre eux.",
            "Regroupez les objets de manière logique pour rendre le diagramme plus lisible.",
            "Gardez le diagramme à jour pour refléter l'état actuel de l'application.",
            "Assure-toi que les noms et les descriptions des objets sont compréhensibles."
        ],
        "example": {
            "description": [],
            "image": "https://i.ytimg.com/vi/z8Ugsspml0o/maxresdefault.jpg"
        }
    },
    {
        "uuid": "adbbdfb7-9741-4dd1-86de-d2245d296067",
        "title": "Paquetages",
        "subTitle": "Diagramme UML",
        "description": [
            "Le diagramme de paquetages, c'est un peu comme une boîte qui contient des morceaux de ton système.",
            "Il t'aide à organiser et à montrer comment les parties de ton logiciel sont regroupées.",
            "\n",
            "Imagine-le comme une vue d'ensemble de comment ton système est structuré.",
            "Ça te permet de voir les grandes catégories ou les modules qui composent ton application."
        ],
        "benefits": [
            "Clarifie la structure de ton application.",
            "Aide à gérer la complexité en la divisant en parties gérables.",
            "Facilite la communication entre les membres de l'équipe."
        ],
        "goodPratices": [
            "Utilise des paquetages pour regrouper des éléments connexes.",
            "Assure-toi que les paquetages ont des noms significatifs.",
            "Montre les dépendances entre les paquetages si besoin."
        ],
        "example": {
            "description": [],
            "image": "https://webusupload.apowersoft.info/gitmind/wp-content/uploads/2021/05/package-diagram-sample.jpg"
        }
    }
]